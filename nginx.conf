daemon off;
user abc abc;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
  worker_connections  1024;
}

http {
  include    mime.types;
  dav_ext_lock_zone zone=foo:10m;
  
  send_timeout 3600;
  client_body_timeout 3600;
  keepalive_timeout 3600;
  lingering_timeout 3600;
  client_max_body_size 10G;
  
  create_full_put_path	on;
	min_delete_depth	0;
	
	charset utf-8;
	source_charset utf-8;

  server {
    server_name localhost;
    listen 80;
    listen [::]:80;  
    
    set $destination $http_destination; 
    set $new_path "";
    set $webdav_root "/data";
    set $checkPropfind "";

    location ~ \.metadata_never_index$ {
      return 200 "Don't index this drive, Finder!";
    }
    
    # With fixes for Windows from http://netlab.dhis.org/wiki/ru:software:nginx:webdav
    location / {
     
      auth_basic "Restricted";
      auth_basic_user_file htpasswd;
      
      dav_ext_lock zone=foo;
      dav_methods		PUT MKCOL;
      dav_ext_methods	OPTIONS LOCK UNLOCK;

      autoindex		on;
      autoindex_exact_size	on;
      autoindex_localtime	on;
      
      fancyindex on;
      fancyindex_exact_size off;
      fancyindex_localtime on;
      fancyindex_name_length 255;
      
      root			$webdav_root;
      
      error_page		599 = @propfind_handler;
      error_page		598 = @delete_handler;
      error_page		597 = @copy_move_handler;
      error_page		596 = @propfind_withdepth_handler;
      
      open_file_cache		off;
      
      if ($request_method != OPTIONS) {
        # CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'OPTIONS, GET, HEAD, POST, PUT, MKCOL, MOVE, COPY, DELETE, PROPFIND, PROPPATCH, LOCK, UNLOCK' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Accept-Charset,X-Accept,origin,accept,if-match,destination,overwrite' always;
        add_header 'Access-Control-Expose-Headers' 'ETag' always;
        add_header 'Access-Control-Max-Age' 1728000 always;
      }
      
      if ($request_method = OPTIONS) {
        # CORS
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'OPTIONS, GET, HEAD, POST, PUT, MKCOL, MOVE, COPY, DELETE, PROPFIND, PROPPATCH, LOCK, UNLOCK';
        add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Accept-Charset,X-Accept,origin,accept,if-match,destination,overwrite';
        add_header 'Access-Control-Expose-Headers' 'ETag';
        add_header 'Access-Control-Max-Age' 1728000;
        
        # WebDAV compliance
        add_header	Allow 'OPTIONS, GET, HEAD, POST, PUT, MKCOL, MOVE, COPY, DELETE, PROPFIND, PROPPATCH, LOCK, UNLOCK';
        add_header	DAV '1, 2';
        return 200;
      }
      
      
      if ($request_method = PROPFIND) { # Normal flow for PROPFIND
        set $checkPropfind "propfind";
      }
      
      if ($http_depth = 0) { # FIX for Depth = 0 allowed unauthenticated
        set $checkPropfind "${checkPropfind}+withDepth";
      }
      
      if ($http_depth = 1) { # FIX for Depth = 1 allowed unauthenticated
        set $checkPropfind "${checkPropfind}+withDepth";
      }
      
      if ($checkPropfind = "propfind") { # Normal flow for PROPFIND
        return 599;
      } 
      
      if ($checkPropfind = "propfind+withDepth") { # FIX for Depth = 1 allowed unauthenticated
        return 596;
      }   
      
      if ($request_method = PROPPATCH) { # Unsupported, allways return OK.
        add_header	Content-Type 'text/xml';
        return		207 '<?xml version="1.0"?><a:multistatus xmlns:a="DAV:"><a:response><a:propstat><a:status>HTTP/1.1 200 OK</a:status></a:propstat></a:response></a:multistatus>';
      }
      
      if ($request_method = MKCOL) { # Microsoft specific handle: add trailing slash.
        rewrite ^(?<captured_path>.*[^/])$ $captured_path/ break;
      }
      
      if ($request_method = DELETE) {
        return 598;
      }
      
      if ($request_method = COPY) {
        return 597;
      }
      
      if ($request_method = MOVE) {
        return 597;
      }
      
      include conf.d/location.conf;
      
    }
    
    location @propfind_handler {
    
      internal;

      open_file_cache	off;
      
      
      if (!-e $webdav_root/$uri) { # Microsoft specific handle.
        return 404;
      }
      
      root			$webdav_root;
      dav_ext_methods		PROPFIND;
    }
    
    location @propfind_withdepth_handler { # Same as above but authenticated.
    
      auth_basic "Restricted";
      auth_basic_user_file htpasswd;
    
      internal;

      open_file_cache	off;
      
      
      if (!-e $webdav_root/$uri) { # Microsoft specific handle.
        return 404;
      }
      
      root			$webdav_root;
      dav_ext_methods		PROPFIND;
    }
    
    location @delete_handler {
    
      auth_basic "Restricted";
      auth_basic_user_file htpasswd;
      
      internal;
      open_file_cache	off;
      
      if ($destination ~ ^https?://(?<captured_path>.*)$) {
        set $new_path $captured_path;
        more_set_input_headers "Destination: http://$new_path";
      }
      
      if (-d $webdav_root/$uri) { # Microsoft specific handle: Add trailing slash to dirs.
        more_set_input_headers "Destination: http://$new_path/";
        rewrite ^(?<captured_path>.*[^/])$ $captured_path/ break;
      }
      
      root			$webdav_root;
      dav_methods		DELETE;
    }

    location @copy_move_handler {
    
      auth_basic "Restricted";
      auth_basic_user_file htpasswd;
    
      internal;
      open_file_cache	off;
      
      if ($destination ~ ^https?://(?<captured_path>.*)$) {
        set $new_path $captured_path;
        more_set_input_headers "Destination: http://$new_path";
      }
      
      if (-d $webdav_root/$uri) { # Microsoft specific handle: Add trailing slash to dirs.
        more_set_input_headers "Destination: http://$new_path/";
        rewrite ^(?<captured_path>.*[^/])$ $captured_path/ break;
      }
      
      root			$webdav_root;
      dav_methods		COPY MOVE;
    }
    include conf.d/server.conf;
  }
  include conf.d/http.conf;
}
